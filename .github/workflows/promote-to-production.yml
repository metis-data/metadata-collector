name: promote to production
on: workflow_dispatch
jobs:
  promote_to_prod:
    defaults:
      run:
        working-directory: ./client-agent/src
    runs-on: ubuntu-20.04
    name: promote latest-dev tag to production
    steps:
      - name: login to ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.5.1
        with:
          registry-type: public

      - name: retreive the latest image id with latest-dev tag and repush it with latest tag
        id: retreive-latest-image-id
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          filter=*$REGISTRY/o2c0x5x8/metis-md-collector:latest-dev
          IMAGE_ID=$(docker images --filter=reference=$filter -q | head -1)
          image_name=$REGISTRY/o2c0x5x8/metis-md-collector:latest
          docker tag $IMAGE_ID $image_name
          docker push $image_name
          echo "image_name=$image_name" >> "$GITHUB_OUTPUT"

      - name: generate cloud formation script
        id: generate-cloud-formation-script
        env:
          APP_ENV: production
          INGEST_URL: ingest.metisdata.io
          WEB_APP_HOST: app.metisdata.io
        run: |
          file_name=metadata-collector-cloudformation.yaml
          cat ../../$file_name | \
              sed -e "s+ingest.metisdata.io+$INGEST_URL+g" \
                  -e "s+app.metisdata.io+$WEB_APP_HOST+g" \
                  -e "s+Value: production+Value: $APP_ENV+g" \
                  -e "s+Image: public.ecr.aws/o2c0x5x8/metis-md-collector:latest+Image: ${{ steps.retreive-latest-image-id.outputs.image_name }}+g" \
              > ../../$file_name
          cp ../../$file_name .
          echo "file_name=$file_name" >> "$GITHUB_OUTPUT"

      - name: upload cloud formation script to S3
        uses: actions/upload-artifact@v3
        with:
          name: cloudformation.yaml
          path: ${{ steps.generate-cloud-formation-script.outputs.file_name }}